# This is a basic workflow to help you get started with Actions

name: Docker Builds

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
      - 'dev'
      - 'v*.*.*'
      - '!renovate/**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'
      - 'dev'
      - 'v*.*.*'
      - '!renovate/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-workspace:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dockerfile: Dockerfile
            context: base-image
            image: ghcr.io/shadowkrusha/base-workspace
            platforms: linux/amd64,linux/arm64
          - dockerfile: Dockerfile
            context: python-image
            image: ghcr.io/shadowkrusha/python-workspace
            platforms: linux/amd64
          - dockerfile: Dockerfile
            context: java-image
            image: ghcr.io/shadowkrusha/java-workspace
            platforms: linux/amd64,linux/arm64
          - dockerfile: Dockerfile
            context: redis-image
            image: ghcr.io/shadowkrusha/redis-workspace
            platforms: linux/amd64,linux/arm64
    steps:
      # Get the repositery's code
      - name: Checkout
        uses: actions/checkout@v3.2.0

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.4.0

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta_workspace
        uses: docker/metadata-action@v4.3.0
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ matrix.image }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v3.3.1
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockefile }}
          platforms: ${{ matrix.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_workspace.outputs.tags }}
          labels: ${{ steps.meta_workspace.outputs.labels }}
